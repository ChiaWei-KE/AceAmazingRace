@using AceAmazingRace.Models
@model AceAmazingRace.ViewModels.PitStopViewModel
@{
    string header = "";
    string submitButtonText = "";

    if (@Model.UserAction == "Create") {
        header = "Create New Pit Stop";
        submitButtonText = "Create";
    }
    else if (@Model.UserAction == "Edit") {
        header = "Update Pit Stop";
        submitButtonText = "Save";
    }

    ViewBag.Title = @header;
    Layout = "~/Views/Shared/_Layout.cshtml";

    var coordinates = @Model.Locations.ToDictionary(x => Convert.ToString(x.Id), x => x);
    var currentLocation = @Model.LocationId;

}

<h3>@header</h3>

@using (@Html.BeginForm("Save", "PitStop", new {eventId = @Model.RaceEventId, userAction = @Model.UserAction})) {

    <div class="form-group">
        @Html.LabelFor(e => e.PitStop.Name)
        @Html.TextBoxFor(e => e.PitStop.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.PitStop.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(e => e.LocationId, "Location")
        @Html.DropDownListFor(e => e.LocationId,
            new SelectList(@Model.Locations, "Id", "Name"),
            "Please select Location",
            new { @class = "form-control", onclick = "viewOnMap(this.value);" })
        @Html.ValidationMessageFor(e => e.LocationId)
    </div>

    <div class="form-group" id="map-container">
@*        Dynamically add element in javascript*@
    </div>

    <div class="form-group">
        @Html.LabelFor(e => e.PitStop.Remark)
        @Html.TextBoxFor(e => e.PitStop.Remark, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.PitStop.Remark)
    </div>

    @Html.HiddenFor(e => e.PitStop.Id)

    <button type="submit" class="btn btn-primary">@submitButtonText</button>
    <a class="btn btn-primary" href="@Url.Action("Index","PitStop", new {id = @Model.RaceEventId})">Cancel</a>
}

<script>
    var coordinates = @Html.Raw(Json.Encode(@coordinates));

    function viewOnMap(id) {
        $("#mapid").remove();
        if (id && id > 0) {
            $('#map-container').append("<div id='mapid' style='width: 500px; height: 300px;'></div>");

            var mymap = L.map('mapid');
            
            mymap.setView([coordinates[id].Latitude, coordinates[id].Longitude], 17);

            L.marker([coordinates[id].Latitude, coordinates[id].Longitude])
                .addTo(mymap);

            L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw',
                {
                    maxZoom: 18,
                    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
                        '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                        'Imagery © <a href="http://mapbox.com">Mapbox</a>',
                    id: 'mapbox.streets'
                }).addTo(mymap);

            function onMapClick(e) {
                L.popup()
                 .setLatLng(e.latlng)
                 .setContent("You clicked the map at " + e.latlng.toString())
                 .openOn(mymap);
            }

            mymap.on('click', onMapClick);
        }
    }

    viewOnMap(@currentLocation);
    
</script>
