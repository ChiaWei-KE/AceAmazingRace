@model AceAmazingRace.ViewModels.PitStopOrdersViewModel
@{
    ViewBag.Title = "EditOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var locations = @Model.PitStopOrders.Select(x => x.PitStop.Location).ToList();
    var centerLatitude = locations.Average(x => x.Latitude);
    var centerLongitude = locations.Average(x => x.Longitude);
}

    <div class="jumbotron" style="padding: 10px 50px;">
    <h2>Update Pit Stop Orders</h2>
    <br />
    <div class="form-group">
        <a class="btn btn-default" href="@Url.Action("Index","Team", new {id = @Model.RaceEventId})">Back</a>
    </div>

    @if (@Model.PitStopOrders.Count == 0)
    {
        <span>No records are found.</span>
    }
    else
    {
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Location</th>
                    <th>Remark</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in @Model.PitStopOrders)
                {
                    <tr>
                        <td>@item.PitStop.Name</td>
                        <td>@item.PitStop.Location.Name</td>
                        <td>@item.PitStop.Remark</td>
                        <td class="text-center">
                            <a class="glyphicon glyphicon-circle-arrow-up" href="@Url.Action("MoveUp", "Team", new {id = item.Id})"></a>
                            <a class="glyphicon glyphicon-circle-arrow-down" href="@Url.Action("MoveDown", "Team", new {id = item.Id})"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <div class="form-group text-center">
        <div id="mapid" style="width: 1000px; height: 500px; margin: 0 auto;"></div>
    </div>

    </div>

<script>
    var locations = @Html.Raw(Json.Encode(@locations));
    console.log(locations);

    var mymap = L.map('mapid')
                 .setView([@centerLatitude, @centerLongitude], 17);

    var polyLines = [];

    locations.forEach(function(loc, index) {
        L.marker([loc.Latitude, loc.Longitude])
                      .bindTooltip("Pit Stop " + (index + 1), {permanent: true})
                      .addTo(mymap);

        polyLines.push([loc.Latitude, loc.Longitude]);
    });

    L.polyline(polyLines, { color: "red" }).addTo(mymap);

    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
        maxZoom: 18,
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
			'<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
			'Imagery © <a href="http://mapbox.com">Mapbox</a>',
        id: 'mapbox.streets'
    }).addTo(mymap);

    function onMapClick(e) {
        L.popup()
         .setLatLng(e.latlng)
         .setContent("You clicked the map at " + e.latlng.toString())
         .openOn(mymap);
    }

    mymap.on('click', onMapClick);

    </script>
